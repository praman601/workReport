@model workReport.Models.user

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.userName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.userName, new { htmlAttributes = new { @class = "form-control", @onchange = "CheckAvailability()", @onkeyup = "ClearMessage()", id = "1",@Required="required", @oninvalid = "this.setCustomValidity('Please enter username!!')" } })
                @Html.ValidationMessageFor(model => model.userName, "", new { @class = "text-danger" })
            </div>
        </div>
        <span id="message"></span>
        <div class="form-group">
            @Html.LabelFor(model => model.userPassword, htmlAttributes: new { @class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.userPassword, new { htmlAttributes = new { @class = "form-control", id = "2", @Required = "required" } })
                @Html.ValidationMessageFor(model => model.userPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control", id = "3", @Required = "required" } })
                @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control", id = "4", @Required = "required" } })
                @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.post, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("isPost", (IEnumerable<SelectListItem>)ViewBag.isPost, "--Select Post--", htmlAttributes: new { @class = "form-control", id = "5", @Required = "required" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.contractDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.contractDate, new { htmlAttributes = new { @class = "form-control", placeholder = "2076-07-29", id = "6", @Required = "required" } })
                @Html.ValidationMessageFor(model => model.contractDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.monthlySalary, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.monthlySalary, new { htmlAttributes = new { @class = "form-control", id = "7", @Required = "required" } })
                @Html.ValidationMessageFor(model => model.monthlySalary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.totalAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.totalAmount, new { htmlAttributes = new { @class = "form-control", id = "8", @Required = "required" } })
                @Html.ValidationMessageFor(model => model.totalAmount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.lastMonthAmount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.lastMonthAmount, new { htmlAttributes = new { @class = "form-control", id = "9", @Required = "required" } })
                @Html.ValidationMessageFor(model => model.lastMonthAmount, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.bankName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.bankName, new { htmlAttributes = new { @class = "form-control", placeholder = "Everest Bank Ltd." , id = "10", @Required = "required" } })
                @Html.ValidationMessageFor(model => model.bankName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.branch, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.branch, new { htmlAttributes = new { @class = "form-control", placeholder = "New Baneshwor, Kathmandu", id = "11", @Required = "required" } })
                @Html.ValidationMessageFor(model => model.branch, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.acnumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.acnumber, new { htmlAttributes = new { @class = "form-control", id = "12", @Required = "required" } })
                @Html.ValidationMessageFor(model => model.acnumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default"  />
            </div>
        </div>
    </div>
}




<script type="text/javascript">
    function CheckAvailability() {
        var username = $("#userName").val();
        $.ajax({
            type: "POST",
            url: "/Register/CheckUsername",
            data: '{username: "' + username + '" }',
            contentType: "application/json; charset=utf-8",
            dataType: "json",
            success: function (response) {
                var message = $("#message");
                message.html(null);
                if (response) {

                    message.css("color", "red");
                    message.html("username already exists!!");
                }
                else {
                    //Email not available.


                    message.html = null;
                    //message.css("color", "green");
                    //message.html("Email is available");
                }
            }
        });
    };

    function ClearMessage() {
        $("#message").html("");
    };


    //function SubmitCheck() {
    //    debugger;
    //    var IdList = gfg_Run();
    //    var index = array.indexOf("message");
    //    if (index !== -1) {
    //        array.splice(index, 1);
    //    }
    //    alert(IdList);
    //    var checkVal = 0;
    //    var IdValue = [];
    //    for (var i = 0; i < IdList.length; i++) {
    //        IdValue[i] = document.getElementById(IdList[i]).value;
    //        if ((IdValue[i]) == null || IdValue[i]=="" ) {
    //            checkVal += 1;
    //            IdValue[i].css("color", "red");
    //        }
           
    //    }
    //    if (checkVal > 0) {
    //        return 
    //    }

    //    return true;
    //};

    //function gfg_Run() {
    //    debugger;
    //    var ID = [];
    //    $("*").each(function () {
    //        if (this.id) {
    //            ID.push(this.id);
    //        }
    //    });
    //    return ID;
    //};
    //$(document).ready(function () {
    //    $('input[type="submit"]').attr('disabled', 'disabled');
    //    $('input[type="text"]').change(function () {
    //        if ($(this).val != '') {
    //            $('input[type="submit"]').removeAttr('disabled');
    //        }
    //    });
    //});

</script>

